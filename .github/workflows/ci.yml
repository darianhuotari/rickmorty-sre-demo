name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install deps (runtime + dev)
        run: make dev

      - name: Lint
        run: make lint

      # --- Security checks on PRs only, run once for the matrix (3.12) ---
      - name: Security (bandit + pip-audit)
        if: github.event_name == 'pull_request' && matrix.python-version == '3.12'
        run: make security

      - name: Test (coverage >= 80%)
        run: make test

      - name: Generate HTML coverage (only on 3.12)
        if: matrix.python-version == '3.12'
        run: make coverage

      - name: Upload coverage HTML artifact
        if: matrix.python-version == '3.12'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html-${{ github.run_id }}
          path: htmlcov/
          if-no-files-found: warn

  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      e2e: ${{ steps.filter.outputs.e2e }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            e2e:
              - 'deploy/**'
              - 'Dockerfile'
              - 'tests/test_e2e.py'
              - '.github/workflows/**'

  e2e-test:
    needs: [lint-and-test, detect-changes]
    # Run on push to main always; on PR only if relevant paths changed
    if: >
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'pull_request' && needs.detect-changes.outputs.e2e == 'true')
    runs-on: ubuntu-latest
    env:
      IMG_TAG: ${{ github.sha }}   # ensure we test the same image built for this run
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip

      - name: Install deps (runtime + e2e)
        run: |
          make install

      - name: Setup Kind cluster and run e2e tests
        run: |
          make kind-up IMG_TAG=${IMG_TAG}
          make test-e2e

      - name: Cleanup Kind cluster
        if: always()
        run: make kind-down

  publish:
    needs: [lint-and-test, e2e-test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ---- Build local image to scan BEFORE pushing ----
      - name: Build image (local only, for scanning)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: local/rm-sre:${{ github.sha }}

      - name: Trivy scan (image) â€“ fail on HIGH/CRITICAL
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: local/rm-sre:${{ github.sha }}
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH
          format: table
          exit-code: '1'

      # ---- Only if scan passed, log in and push real tags ----
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/rickmorty-sre-demo:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/rickmorty-sre-demo:main
