name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Cancel older runs for the same branch/PR when new commits arrive
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies (runtime + dev) in venv
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          # editable install for 'app' package
          pip install -e .
        shell: bash

      - name: Lint (black check + flake8)
        run: |
          . .venv/bin/activate
          make lint
        shell: bash

      - name: Test (pytest w/ coverage threshold)
        run: |
          . .venv/bin/activate
          make test
        shell: bash

      - name: Generate HTML coverage (only once)
        if: matrix.python-version == '3.12'
        run: |
          . .venv/bin/activate
          make coverage
        shell: bash

      - name: Upload coverage artifact (HTML)
        if: matrix.python-version == '3.12'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html-${{ github.run_id }}
          path: htmlcov/
          if-no-files-found: warn
